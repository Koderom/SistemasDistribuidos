/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package Views;

import ClienteSocket.ClienteTCP;
import Models.Jugador;
import Models.Tablero;
import SalaEsperaEvents.EmpezarBatallaEvent;
import SalaEsperaEvents.JugadorEnSalaEvent;
import SalaEsperaEvents.JugadorListoEvent;
import SalaEsperaEvents.PuedeComenzarEvent;
import SalaEsperaEvents.SalaEsperaListener;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JLabel;

/**
 *
 * @author MIRKO
 */
public class SalaEsperaView extends javax.swing.JDialog implements SalaEsperaListener{
    ClienteSocket.ClienteTCP cliente;
    MainForm parent;
    Tablero tablero;
    
    ArrayList<Jugador> jugadores = new ArrayList<>();
    /**
     * Creates new form SalaEsperaView
     */
    DefaultListModel model = new DefaultListModel();
    
    public SalaEsperaView(int session_id, String nick, String rol, ClienteTCP cliente, java.awt.Frame parent, boolean modal, Tablero tablero) {
        super(parent, modal);
        initComponents();
        this.parent = (MainForm)parent;
        this.tablero = tablero;
        
        jugadores.add(new Jugador(session_id, nick, rol));
        this.cliente = cliente;
        this.cliente.addSalaEsperaListener(this);
        lista_jugadores.setModel(model);
        iniciarSalaEspera();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        boton_listo = new javax.swing.JButton();
        boton_empezar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        lista_jugadores = new javax.swing.JList<>();
        contenedor_fondo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Sala de espera");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 10, -1, -1));

        boton_listo.setText("Listo");
        boton_listo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_listoActionPerformed(evt);
            }
        });
        getContentPane().add(boton_listo, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 440, -1, -1));

        boton_empezar.setText("Empezar");
        boton_empezar.setEnabled(false);
        boton_empezar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_empezarActionPerformed(evt);
            }
        });
        getContentPane().add(boton_empezar, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 440, -1, -1));

        jScrollPane1.setViewportView(lista_jugadores);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 40, 260, 380));

        contenedor_fondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/fondo_sala_espera.jpg"))); // NOI18N
        getContentPane().add(contenedor_fondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void boton_listoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_listoActionPerformed
        this.cliente.jugadorEnSalaListo();
        boton_listo.setEnabled(false);
    }//GEN-LAST:event_boton_listoActionPerformed

    private void boton_empezarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_empezarActionPerformed
        this.cliente.empezarBatalla();
        
    }//GEN-LAST:event_boton_empezarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton boton_empezar;
    private javax.swing.JButton boton_listo;
    private javax.swing.JLabel contenedor_fondo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> lista_jugadores;
    // End of variables declaration//GEN-END:variables
    
    private void iniciarSalaEspera(){
        boton_empezar.setVisible(false);
        Jugador jugador = getJugador(this.cliente.nick);
        if(jugador.rol.equals("MASTER")) boton_empezar.setVisible(true);
        actualizarListaJugadores();
    }
    private Jugador getJugador(String nick){
        for(Jugador jugador : jugadores) if(jugador.nick.equals(nick)) return jugador;
        return null;
    }
    private void actualizarListaJugadores(){
        model = new DefaultListModel();
        for(Jugador jugador : jugadores){
            model.addElement(jugador.toString());
        }
        lista_jugadores.setModel(model);
    }
    @Override
    public void onEmpezarBatalla(EmpezarBatallaEvent event) {
        BatallaView batalla = new BatallaView(parent, false , this.cliente, event.getTurno(), tablero, jugadores);
        batalla.setVisible(true);
        this.setVisible(false);
    }

    @Override
    public void onJugadorEnSala(JugadorEnSalaEvent event) {
        jugadores.add(new Jugador(event.getSession_id(), event.getNick(), event.getRol(), event.isListo()));
        boton_empezar.setEnabled(false);
        actualizarListaJugadores();
    }

    @Override
    public void onJugadorListo(JugadorListoEvent event) {
        Jugador jugador = getJugador(event.getNick());
        jugador.estaListo = true;
        actualizarListaJugadores();
        System.out.println("listo");
    }

    @Override
    public void onPuedeComenzar(PuedeComenzarEvent event) {
        boton_empezar.setEnabled(true);
    }

    
    
//    public class Jugador{
//        public int id_session;
//        public String nick;
//        public String rol;
//        public boolean estaListo;
//
//        public Jugador(int id_session, String nick, String rol) {
//            this.id_session = id_session;
//            this.nick = nick;
//            this.rol = rol;
//            this.estaListo = false;
//        }
//        public Jugador(int id_session, String nick, String rol, boolean listo){
//            this(id_session, nick, rol);
//            this.estaListo = listo;
//        }
//        @Override
//        public String toString(){
//            String tostring = nick;
//            if(rol.equals("MASTER")) tostring += "(master)";
//            if(!estaListo) tostring += "___listo : NO";
//            else tostring += "___listo : SI";
//            return tostring;
//        }
//    }
}
